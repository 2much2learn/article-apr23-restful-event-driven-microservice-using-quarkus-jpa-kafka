quarkus:

  # load Custom Banner - Generated at http://patorjk.com/software/taag/#p=display&f=Slant&t=Catalogue%20CRUD
  banner:
    path: banner.txt

  # Datasource configuration
  datasource:
    db-kind: postgresql
    username: postgres
    password: password
    jdbc:
      driver: io.opentracing.contrib.jdbc.TracingDriver
      url: jdbc:tracing:postgresql://0.0.0.0:5432/cataloguedb
      min-size: 5
      max-size: 12

  # Hibernate ORM configuration
  hibernate-orm:
    database:
      generation: drop-and-create

  # Logging configuration
  log:
    level: INFO
    console:
      enable: true
      format: "%d{HH:mm:ss} %-5p traceId=%X{traceId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n"
      level: DEBUG
      color: false
    category:
      "org.hibernate":
        level: WARN
      "io.quarkus":
        level: INFO

    # Send logs to Graylog
    handler:
      gelf:
        enabled: true
        host: localhost
        port: 12201

  jaeger:
    service-name: catalogue-crud
    sampler-type: const
    sampler-param: 1

  # configuration options that can affect how the native image is generated
  native:
    # The maximum Java heap to be used during the native image generation
    native-image-xmx: 4g

    # Additional arguments to pass to the build process
    additional-build-args: >
      -H:ResourceConfigurationFiles=resources-config.json,
      -H:ReflectionConfigurationFiles=reflection-config.json

# Kafka Messages
# Configure the Kafka sink (we write to it)
mp:
  messaging:
    outgoing:
      price-updated:
        connector: smallrye-kafka
        topic: price-updated
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
    incoming:
      product-purchased:
        connector: smallrye-kafka
        topic: product-purchased
        value:
          deserializer: org.apache.kafka.common.serialization.StringDeserializer

### Test Configuration ####
"%test":
  quarkus:
    # Datasource configuration
    datasource:
      db-kind: postgresql
      url: jdbc:tc:postgresql:latest:///cataloguedb
    hibernate-orm:
      dialect: org.hibernate.dialect.PostgreSQL9Dialect
      database:
        generation: drop-and-create